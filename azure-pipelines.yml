# # ASP.NET
# # Build and test ASP.NET projects.
# # Add steps that publish symbols, save build artifacts, deploy, and more:
# # https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

# trigger:
# - master

# pool:
#   vmImage: 'windows-latest'

# variables:
#   solution: '**/*.sln'
#   buildPlatform: 'Any CPU'
#   buildConfiguration: 'Release'

# steps:
# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

trigger:
- '*'

variables:
  solution: '**\*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'






stages:

  - stage: build
    displayName: Build
    jobs:
      - job:
        pool:
          vmImage: windows-latest
        steps:

        - task: NuGetToolInstaller@1
          inputs:
            versionSpec: '4.4.1'

        - task: NuGetCommand@2
          inputs:
            command: 'restore'
            restoreSolution: '$(solution)'
            feedsToUse: 'select'

        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            platform: '$(buildPlatform)'
            configuration: '$(buildConfiguration)'
    #           Create directories for signed artifacts    
        # - task: Docker@2
        #   inputs:
        #     containerRegistry: 'demoappContainerRegistery'
        #     repository: 'signningartifact'
        #     command: 'buildAndPush'
        #     Dockerfile: '**/Dockerfile'

  - stage: Sign
    displayName: Sign
    # condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    jobs:
    - job:
      pool:
        vmImage: ubuntu-latest
      
      
      steps:               

        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'

    
        - script: docker pull nginx:latest
          displayName: ‘Docker Pull CodeSigner Docker Image’
        - script:  azuresigntool sign -kvu "$(SigningVaultURL)" -kvi "$(CONN1242-app-client-id)" -kvt "$(CONN1242-app-tenant-id)" -kvs "$(CONN1242-client-secret-value-password)" -kvc "$(SigningCertName)" -v  nginx:latest
          displayName: ‘Sign artifact with CodeSigner docker image’

        
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'artifac'
            publishLocation: 'Container'
            
              

